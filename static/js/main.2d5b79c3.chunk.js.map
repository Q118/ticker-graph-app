{"version":3,"sources":["utils/ErrorBoundary.js","components/HighChart.js","components/StockView.js","actions/thunks.js","constants.js","actions/types.js","containers/StockContainer.js","reducers/index.js","components/Store.js","containers/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","hasError","this","children","error","React","Component","Highcharts","theme","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","title","color","textTransform","fontSize","subtitle","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","series","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","setOptions","Chart","height","width","highcharts","constructorType","options","ohlc","data","volume","ticker","symbol","align","resize","enabled","top","offset","highchartsBackground","shape","headerShape","borderWidth","shadow","positioner","point","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","plotTop","type","id","name","responsive","rules","condition","maxWidth","chartOptions","inputEnabled","StockView","isDataLoaded","Row","Col","sm","finUrl","candleEndpoint","profileEndpoint","finToken","getFinHubUrl","endpoint","count","resolution","url","fetchStock","dispatch","requestStock","console","log","fetch","then","response","json","description","receiveProfile","fetchProfile","receiveStock","StockContainer","connect","onClick","addStock","initialState","open","high","close","low","isFetching","generateData","finData","i","c","length","push","t","o","h","l","generateVolumeData","v","rootReducer","action","Object","assign","s","undefined","store","createStore","applyMiddleware","thunkMiddleware","subscribe","getState","input","handleSubmit","e","value","preventDefault","trim","toUpperCase","Form","inline","onSubmit","Control","size","placeholder","className","ref","Button","variant","App","Container","fluid","Navbar","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d5b79c3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    // componentDidCatch(error, errorInfo) {\r\n    //     // You can also log the error to an error reporting service\r\n    //     logErrorToMyService(error, errorInfo);\r\n    // }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst color = \"#3d4147\";\nHighcharts.theme = {\n    colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\n        '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n    chart: {\n        backgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n            stops: [\n                [0, '#4c5159'],\n                [1, color]\n            ]\n        },\n        style: {\n            fontFamily: '\\'Unica One\\', sans-serif'\n        },\n        plotBorderColor: '#606063'\n    },\n    title: {\n        style: {\n            color: '#E0E0E3',\n            textTransform: 'uppercase',\n            fontSize: '20px'\n        }\n    },\n    subtitle: {\n        style: {\n            color: '#E0E0E3',\n            textTransform: 'uppercase'\n        }\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n        labels: {\n            style: {\n                color: '#E0E0E3'\n            }\n        },\n        lineColor: '#707073',\n        minorGridLineColor: '#505053',\n        tickColor: '#707073',\n        title: {\n            style: {\n                color: '#A0A0A3'\n            }\n        }\n    },\n    yAxis: {\n        gridLineColor: '#707073',\n        labels: {\n            style: {\n                color: '#E0E0E3'\n            }\n        },\n        lineColor: '#707073',\n        minorGridLineColor: '#505053',\n        tickColor: '#707073',\n        tickWidth: 1,\n        title: {\n            style: {\n                color: '#A0A0A3'\n            }\n        }\n    },\n    tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n        style: {\n            color: '#F0F0F0'\n        }\n    },\n    plotOptions: {\n        series: {\n            dataLabels: {\n                color: '#F0F0F3',\n                style: {\n                    fontSize: '13px'\n                }\n            },\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        boxplot: {\n            fillColor: '#505053'\n        },\n        candlestick: {\n            lineColor: 'white'\n        },\n        errorbar: {\n            color: 'white'\n        }\n    },\n    legend: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        itemStyle: {\n            color: '#E0E0E3'\n        },\n        itemHoverStyle: {\n            color: '#FFF'\n        },\n        itemHiddenStyle: {\n            color: '#606063'\n        },\n        title: {\n            style: {\n                color: '#C0C0C0'\n            }\n        }\n    },\n    credits: {\n        style: {\n            color: '#666'\n        }\n    },\n    labels: {\n        style: {\n            color: '#707073'\n        }\n    },\n    drilldown: {\n        activeAxisLabelStyle: {\n            color: '#F0F0F3'\n        },\n        activeDataLabelStyle: {\n            color: '#F0F0F3'\n        }\n    },\n    navigation: {\n        buttonOptions: {\n            symbolStroke: '#DDDDDD',\n            theme: {\n                fill: '#505053'\n            }\n        }\n    },\n    // scroll charts\n    rangeSelector: {\n        buttonTheme: {\n            fill: '#505053',\n            stroke: '#000000',\n            style: {\n                color: '#CCC'\n            },\n            states: {\n                hover: {\n                    fill: '#707073',\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                },\n                select: {\n                    fill: '#000003',\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                }\n            }\n        },\n        inputBoxBorderColor: '#505053',\n        inputStyle: {\n            backgroundColor: '#333',\n            color: 'silver'\n        },\n        labelStyle: {\n            color: 'silver'\n        }\n    },\n    navigator: {\n        handles: {\n            backgroundColor: '#666',\n            borderColor: '#AAA'\n        },\n        outlineColor: '#CCC',\n        maskFill: 'rgba(255,255,255,0.1)',\n        series: {\n            color: '#7798BF',\n            lineColor: '#A6C7ED'\n        },\n        xAxis: {\n            gridLineColor: '#505053'\n        }\n    },\n    scrollbar: {\n        barBackgroundColor: '#808083',\n        barBorderColor: '#808083',\n        buttonArrowColor: '#CCC',\n        buttonBackgroundColor: '#606063',\n        buttonBorderColor: '#606063',\n        rifleColor: '#FFF',\n        trackBackgroundColor: '#404043',\n        trackBorderColor: '#404043'\n    }\n};\nHighcharts.setOptions(Highcharts.theme);\n\nfunction getOptions(ohlc, volume, ticker) {\n    return ({\n        yAxis: [{\n            labels: {\n                align: 'left'\n            },\n            height: '80%',\n            resize: {\n                enabled: true\n            }\n        }, {\n            labels: {\n                align: 'left'\n            },\n            top: '80%',\n            height: '20%',\n            offset: 0\n        }],\n        highchartsBackground: \"#9427d6\",\n        tooltip: {\n            shape: 'square',\n            headerShape: 'callout',\n            borderWidth: 0,\n            shadow: false,\n            positioner: function (width, height, point) {\n                var chart = this.chart,\n                    position;\n\n                if (point.isHeader) {\n                    position = {\n                        x: Math.max(\n                            // Left side limit\n                            chart.plotLeft,\n                            Math.min(\n                                point.plotX + chart.plotLeft - width / 2,\n                                // Right side limit\n                                chart.chartWidth - width - chart.marginRight\n                            )\n                        ),\n                        y: point.plotY\n                    };\n                } else {\n                    position = {\n                        x: point.series.chart.plotLeft,\n                        y: point.series.yAxis.top - chart.plotTop\n                    };\n                }\n\n                return position;\n            }\n        },\n        series: [{\n            type: 'ohlc',\n            id: 'aapl-ohlc',\n            name: ticker + ' Stock Price',\n            data: ohlc\n        }, {\n            type: 'column',\n            id: ticker + '-volume',\n            name: ticker + ' Volume',\n            data: volume,\n            yAxis: 1\n        }],\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 800\n                },\n                chartOptions: {\n                    rangeSelector: {\n                        inputEnabled: false\n                    }\n                }\n            }]\n        }\n    });\n}\n\nconst Chart = (props) => {\n    return (\n        <div style={{ height: \"100%\", width: \"100%\" }}>\n            <HighchartsReact\n                highcharts={Highcharts}\n                constructorType={'stockChart'}\n                options={getOptions(props.data, props.volume, props.symbol)}\n            />\n        </div>\n    )\n}\n\nexport default Chart;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap'\n// import Chart from './Chart.js.bu';\nimport ErrorBoundary from '../utils/ErrorBoundary';\nimport Chart from './HighChart';\n// import StockCard from './StockCard';\n\nconst StockView = (props) => {\n    if (props.isDataLoaded) {\n        return (\n            <Row>\n                <Col sm>\n                    <ErrorBoundary>\n                        {/* <Chart /> attempt here with tradingviews */}\n                        <Chart\n                            data={props.data}\n                            volume={props.volume}\n                            symbol={props.symbol}\n                        />\n                    </ErrorBoundary>\n                </Col>\n            </Row>\n        );\n    }\n    return (<Row></Row>);\n}\n\nexport default StockView;","import {\n  FINNHUB,\n} from '../constants'\n\nimport {\n  requestStock,\n  receiveStock,\n  receiveProfile\n} from './types';\n\nconst finUrl = FINNHUB.baseUrl;\nconst candleEndpoint = FINNHUB.candleEndpoint;\nconst profileEndpoint = FINNHUB.profileEndpoint;\nconst finToken = FINNHUB.token;\n\nfunction getFinHubUrl(\n  endpoint=candleEndpoint,\n  symbol=\"TWTR\",\n  count=200,\n  resolution=\"D\")\n{\n  var url = finUrl + endpoint;\n  if (endpoint === candleEndpoint) {\n    url += \"symbol=\" + symbol + \"&resolution=\" + resolution +  \"&count=\" + count;\n  } else if (endpoint === profileEndpoint) {\n    url += \"symbol=\" + symbol;\n  }\n  url += \"&token=\" + finToken;\n  return (url);\n}\n\nfunction fetchProfile(symbol) {\n  return function (dispatch) {\n    var url = getFinHubUrl(profileEndpoint, symbol);\n    console.log(url);\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log(\"ERROR: \", error)\n      )\n      .then(data => dispatch(receiveProfile(data)));\n  }\n}\n\nexport function fetchStock(symbol) {\n  return function(dispatch) {\n    dispatch(requestStock(symbol));\n    fetchProfile(symbol)(dispatch);\n    var url = getFinHubUrl(candleEndpoint, symbol);\n    console.log(url);\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log(\"ERROR: \", error)\n      )\n      .then(data => dispatch(receiveStock(symbol, data)));\n  }\n}","export const color=\"#3d4147\";\nexport const SEARCH_STOCK = \"SEARCH_STOCK\";\nexport const REQUEST_STOCK = \"REQUEST_STOCK\";\nexport const RECEIVE_STOCK = \"RECEIVE_STOCK\";\nexport const FETCH_STOCK = \"FETCH_STOCK\";\nexport const RECEIVE_PROFILE = \"RECEIVE_PROFILE\";\nexport const ADD_STOCK = \"ADD_STOCK\";\nexport const FINNHUB = {\n  baseUrl: 'https://finnhub.io/api/v1/',\n  candleEndpoint: 'stock/candle?',\n  profileEndpoint: 'stock/profile?',\n  token: 'c822p8iad3i9d12p5jlg'\n}\nexport const TWITTER = {\n  baseUrl: '',\n  token: ''\n}\nexport const item_color = \"#3d4147\";","import {\n  SEARCH_STOCK,\n  REQUEST_STOCK,\n  RECEIVE_STOCK,\n  RECEIVE_PROFILE,\n  ADD_STOCK\n} from '../constants';\n\nexport function searchStock(symbol) {\n  console.log('Searching for stock: ', symbol);\n  return {\n    type: SEARCH_STOCK,\n    symbol\n  }\n}\n\nexport function requestStock(symbol) {\n  return {\n    type: REQUEST_STOCK,\n    symbol\n  }\n}\n\nexport function receiveStock(symbol, data) {\n  return {\n    type: RECEIVE_STOCK,\n    symbol,\n    data: data\n  }\n}\n\nexport function receiveProfile(data) {\n  return {\n    type: RECEIVE_PROFILE,\n    description: data.description,\n    name: data.name\n  }\n}\n\nexport function addStock(symbol) {\n  return {\n    type: ADD_STOCK,\n    symbol: symbol\n  }\n}","import { connect } from 'react-redux'\nimport StockView from '../components/StockView'\nimport { addStock } from '../actions'\n\nconst mapStateToProps = state => {\n  return {\n    symbol: state.symbol,\n    name: state.name,\n    description: state.description,\n    data: state.data,\n    volume: state.volume,\n    isDataLoaded: state.isDataLoaded\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClick: symbol => {\n      dispatch(addStock(symbol))\n    }\n  }\n}\n\nconst StockContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (StockView)\n\nexport default StockContainer","import {\n    SEARCH_STOCK,\n    FETCH_STOCK,\n    REQUEST_STOCK,\n    RECEIVE_STOCK,\n    RECEIVE_PROFILE\n} from '../constants';\n\nconst initialState = {\n    symbol: '',\n    data: {\n        open: [],\n        high: [],\n        close: [],\n        low: []\n    },\n    volume: [],\n    isFetching: false,\n    resolution: '',\n    name: '',\n    description: '',\n    isDataLoaded: false\n}\n\nfunction generateData(finData) {\n    var data = [];\n    for (var i = 0; i < finData.c.length; i++) {\n        data.push([\n            finData.t[i] * 1000,\n            finData.o[i],\n            finData.h[i],\n            finData.l[i],\n            finData.c[i]\n        ]);\n    }\n    return (data);\n}\n\nfunction generateVolumeData(finData) {\n    var data = [];\n    for (var i = 0; i < finData.c.length; i++) {\n        data.push([\n            finData.t[i] * 1000,\n            finData.v[i]\n        ]);\n    }\n    return (data);\n}\n\nfunction rootReducer(\n    state = initialState,\n    action = FETCH_STOCK\n) {\n    switch (action.type) {\n        case SEARCH_STOCK:\n            return Object.assign({}, state, {\n                symbol: action.symbol\n            })\n        case REQUEST_STOCK:\n            return Object.assign({}, state, {\n                isFetching: true\n            })\n        case RECEIVE_STOCK:\n            if (action.data.s === \"ok\") {\n                return Object.assign({}, state, {\n                    isFetching: false,\n                    symbol: action.symbol,\n                    data: generateData(action.data),\n                    volume: generateVolumeData(action.data),\n                    isDataLoaded: true\n                })\n            }\n            return state;\n        case RECEIVE_PROFILE:\n            if (action.name !== undefined) {\n                return Object.assign({}, state, {\n                    name: action.name,\n                    description: action.description\n                })\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import rootReducer from '../reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { fetchStock } from '../actions';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nstore.subscribe(() => console.log(store.getState()));\nstore.dispatch(fetchStock(\"AAPL\"));\n\nexport default store;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { fetchStock } from '../actions/index';\nimport store from '../components/Store';\nconst Search = ({ dispatch }) => {\n    let input;\n\n    const handleSubmit = (e) => {\n        console.log(\"search submit: \", input.value);\n        e.preventDefault();\n        if (!input.value.trim()) {\n            return;\n        }\n        if (store.getState().symbol === input.value.toUpperCase())\n            return;\n        dispatch(fetchStock(input.value.toUpperCase()));\n        input.value = '';\n    }\n\n    return (\n        <Form inline onSubmit={handleSubmit} >\n            <h4>Enter your ticker here:</h4>\n            <br />\n            <Form.Control\n                size=\"md\"\n                type=\"text\"\n                placeholder=\"stock...\"\n                className=\"mr-sm-2 ml-2\"\n                onSubmit={handleSubmit}\n                ref={ref => { input = ref }}\n            />\n            <Button\n                size=\"sm\"\n                variant=\"outline-success\"\n                onClick={handleSubmit}\n            >Search</Button>\n        </Form>\n    )\n}\n\nexport default connect()(Search);","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../App.css';\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\nimport StockContainer from '../containers/StockContainer';\nimport Search from '../containers/Search';\n\nclass App extends React.Component {\n    render() {\n        return (\n                <Container fluid>\n                    <Navbar hover=\"true\" style={{ backgroundColor: \"#3d4147\" }} expand=\"lg\" variant=\"dark\" sticky=\"top\">\n                        <Navbar.Brand style={{ color: \"#20c94d\" }} href=\"/stock_view\">Covey</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                <Nav.Link href=\"#\">Home</Nav.Link>\n                                <Nav.Link href=\"#\">Leaderboard</Nav.Link>\n                                <Nav.Link href=\"#\">Communities</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                        <Button className=\"join-btn\">Create Portfolio</Button>\n                    </Navbar>\n                    <div className=\"mt-5\">\n                        <Search />\n                    </div>\n                    <br />\n                    <StockContainer />\n                </Container>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './components/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}